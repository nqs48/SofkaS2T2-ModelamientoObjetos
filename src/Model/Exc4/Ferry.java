package Model.Exc4;

import java.util.ArrayList;
import java.util.Scanner;

/**
 * @author Nestor Quiroga
 * Class Ferry to contains the vehicles's list
 */
public class Ferry {
    /**
     * Ferry's id
     */
    private int id;

    /**
     * Ferry's name
     */
    private String name;

    /**
     * Ferry's capacity
     */
    private int capacity;

    /**
     * Ferry's vehicles list
     */
    private ArrayList<Vehicle> vehicles;

    /**
     * Ferry's route
     */
    private String route;

    /**
     *  Constructor class Ferry, initialize the vehicles list and value for the id
     */
    public Ferry() {
        this.vehicles= new ArrayList();
        this.id=1;
    }

    /**
     * Sets a new ferry's id
     * @param id Contains the new id to set, type int
     */
    public void setId(int id) {
        this.id = id+1;
    }

    /**
     * Sets a new ferry's name
     * @param name Contains the new name to set, type string
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Sets a new ferry's capacity
     * @param capacity Contains the new capacity to set, type int
     */
    public void setCapacity(int capacity) {
        this.capacity = capacity;
    }

    /**
     * Sets a new ferry's route
     * @param route Contains the new route to set, type string
     */
    public void setRoute(String route) {
        this.route = route;
    }

    /**
     * Gets the current ferry's name
     * @return returns the ferry's name type string
     */
    public String getName() {
        return name;
    }

    /**
     * Gets the current ferry's capacity
     * @return returns the ferry's capacity type int
     */
    public int getCapacity() {
        return capacity;
    }

    /**
     * Gets the current list of all vehicles in the ferry
     * @return returns the list of vehicles, type arraylist
     */
    public ArrayList<Vehicle> getVehicles() {
        return vehicles;
    }

    /**
     * Sets a new vehicle to the vehicles list
     * @param v Contains the new vehicle to set, type Vehicle
     */
    public void setVehicle(Vehicle v) {
        this.vehicles.add(v);
    }


    /**
     * Collect data to create a new ferry
     */
    public void requestData() {
        System.out.println("\nEnter the Ferry's name: ");
        Scanner name = new Scanner(System.in);
        String s1Name = name.nextLine();
        System.out.println("\nEnter the Ferry's capacity");
        Scanner size = new Scanner(System.in);
        int s1Size = size.nextInt();
        System.out.println("\nEnter the Ferry's route (country -> country ): ");
        Scanner route = new Scanner(System.in);
        String s1Route = route.nextLine();
        setName(s1Name);
        setCapacity(s1Size);
        setRoute(s1Route);
    }

    /**
     * Collect data to create a new vehicle
     * @return returns a new vehicle type Vehicle
     */
    public Vehicle collectVehicleData(){
        System.out.println("\nEnter the vehicle's type: ");
        Scanner type = new Scanner(System.in);
        String s1Type = type.nextLine();
        System.out.println("\nEnter the vehicle's number passengers:");
        Scanner numberPass = new Scanner(System.in);
        int s1NumberPass = numberPass.nextInt();
        System.out.println("\nThere is crew? (true or false): ");
        Scanner crew = new Scanner(System.in);
        boolean s1Crew = crew.nextBoolean();
        System.out.println("\nEnter the vehicle's number wheels: ");
        Scanner numberWheels = new Scanner(System.in);
        int s1NumberWheels = numberWheels.nextInt();
        System.out.println("\nEnter the vehicle's medium move: ");
        Scanner mediumMove = new Scanner(System.in);
        String s1MediumMove = mediumMove.nextLine();
        int autogeneratedId = getVehicles().size()+1;
        return new Vehicle(autogeneratedId,s1Type,s1NumberPass,s1Crew,s1NumberWheels,s1MediumMove);
    }

    /**
     * Show the ferry's information formatted
     */
    public void showInformation() {
        System.out.println("\n++++++++++++++ Ferry: " + this.id +" ++++++++++++++" + "\n\tName: " + this.name + "\n\tCapacity: " + capacity +
                " Vehicles\n\tRoute: " + route);
        if(vehicles.size() > 0){
            System.out.println("\tVehicles: ");
            for (Vehicle j: getVehicles()) {
                System.out.println("\n\tId Vehicle: " + j.getId() + "\n\t\tType: " + j.getType() +
                        "\n\t\tRegistration Date: " + j.getRegistrationDate().getTime() +
                        "\n\t\tMedium Move: " + j.getMediumMove());
            }
        }else{
            System.out.println("\tVehicles: none");
        }
        System.out.print("-----------------------------------------\n\n");
    }

}
